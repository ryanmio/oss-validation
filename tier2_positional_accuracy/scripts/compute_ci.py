"""compute_ci.py
================
Bootstrap the 90th-percentile distance error and its 95 % confidence interval
for the GOOD anchor subset produced by `compute_distances.py`.

Reads:
    results/final_with_manual.csv   (generated by compute_distances.py)

Prints to stdout (and can be redirected to a file):
    Sample size, median error, 90th-percentile error, and 95 % CI.

Run:
    python scripts/compute_ci.py  > results/ci_summary.txt
"""
import numpy as np
import pandas as pd

DF_PATH = 'data/processed/tier2_final_with_manual.csv'  # merged auto + manual dataset

df = pd.read_csv(DF_PATH)

# ---------------------------------------------------------------------
# Re-use the same GOOD-anchor filter as in manual_anchor_apply.py
# ---------------------------------------------------------------------
mask_good = (
    (df['coord_source'] != 'bad')
    & (df['ambiguity_flag'] == 0)
    & (df['exclude_reason'].isna())
    & df['final_lat'].notna()
)

good = df.loc[mask_good, 'final_d_km'].dropna().values

if good.size == 0:
    raise SystemExit('No good anchors found – ensure manual_anchor_apply has been run.')

p90_hat = np.percentile(good, 90)

rng = np.random.default_rng(42)
boot = [np.percentile(rng.choice(good, size=good.size, replace=True), 90) for _ in range(10_000)]
ci_low, ci_hi = np.percentile(boot, [2.5, 97.5])

print(f'Sample size: {good.size}')
print(f'Median: {np.median(good):.2f} km')
print(f'90th percentile: {p90_hat:.2f} km (95% CI {ci_low:.2f}–{ci_hi:.2f} km)') 